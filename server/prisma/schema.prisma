// @see https://github.com/prisma/prisma-client-go/blob/master/docs/quickstart.md
// for complicated relations, see https://github.com/prisma/prisma/discussions/4859

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator db {
    provider = "go run github.com/prisma/prisma-client-go"
    output = "../prisma-client"
}

model Post {
    id                  Int         @default(autoincrement()) @id
    createdAt           DateTime    @default(now())
    updatedAt           DateTime    @updatedAt
    title               String
    published           Boolean
    desc                String?
}

enum Phase {
    WAITING
    WRITING
    VOTING
    PRESENTING
}

model Role {
    id                  Int         @default(autoincrement()) @id
    title               String

    room                Room        @relation(fields: [roomId], references: [id])
    roomId              String         
}

model User {
    id                  Int         @default(autoincrement()) @id
    name                String

    hasVotedFor         Vote[]      @relation(name: "userAwardedVote")
    gotVotesFrom        Vote[]      @relation(name: "userReceivedVote")
}

model Vote {
    id                  Int         @default(autoincrement()) @id

    role                Role        @relation(fields: [roleId], references: [id])
    roleId              Int

    votesFromUser       User[]      @relation(name: "userAwardedVote")
    votesForUser        User[]      @relation(name: "userReceivedVote")
}

model Room {
    id                  String      @default(uuid()) @id
    createdAt           DateTime    @default(now())
    updatedAt           DateTime    @updatedAt
    password            String?     
    phase               Phase       @default(WAITING) 
    roles               Role[]     
    votes               Vote[]
}